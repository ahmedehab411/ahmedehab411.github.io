[
    {
    "id": 1,
    "title": "Autonomous Mobile Warehouse Robot",
    "description": "Developed an autonomous mobile warehouse robot using ROS for real-time navigation and STM32 for low-level motion control. Implemented PD control, sensor integration, and obstacle avoidance to enable autonomous operation in structured environments.",
    "image": "assets/img/projects/Autonomous Mobile Warehouse Robot.webp",
    "tags": ["ROS", "STM32", "PD Control", "Sensor Integration", "Obstacle Avoidance"],
    "category": "robotics",
    "featured": true,
    "github": "https://github.com/ahmedehab411",
    "status": "completed-unavailable", 
    "priority": "high"
  },
  {
    "id": 2,
    "title": "SOS v3 Firefighting Robot",
    "description": "Designed and implemented control algorithms for a fire-fighting robot competing in SOS v3. Led the control team for a fire Fighting Robot, optimizing sensor-actuator integration and navigation.",
    "image": "assets/img/projects/SOS.webp",
    "tags": ["Control Algorithms", "Sensor-Actuator Integration", "Navigation"],
    "category": "robotics",
    "featured": false,
    "github": "https://github.com/ahmedehab411",
    "status": "completed-unavailable",
    "priority": "medium"
  },
  {
    "id": 3,
    "title": "Maze Solving Robot",
    "description": "Built a line-following and maze-solving robot with microcontroller-based logic and state machine control. Designed and programmed a maze-solving robot, securing 2nd place in a robotics competition.",
    "image": "assets/img/projects/mazeSolver.webp",
    "tags": ["Line-Following", "Maze-Solving", "Microcontroller", "State Machine"],
    "category": "robotics",
    "featured": false,
    "github": "https://github.com/ahmedehab411",
    "status": "completed-unavailable",
    "priority": "medium"
  },
  {
    "id": 4,
    "title": "ROV Control System",
    "description": "Contributed to the design and development of the control system for a Remotely Operated Vehicle (ROV). Implemented joystick-based manual control and real-time motor interfacing for directional underwater navigation.",
    "image": "https://via.placeholder.com/400x300/302B63/FF6B6B?text=ROV+System",
    "tags": ["ROV", "Joystick Control", "Motor Interfacing"],
    "category": "robotics",
    "featured": false,
    "github": "https://github.com/ahmedehab411",
    "status": "completed-unavailable",
    "priority": "medium"
  },
  {
    "id": 5,
    "title": "Neural Network from Scratch (MNIST)",
    "description": "Developed a two-layer neural network using NumPy to classify handwritten digits from the MNIST dataset. Implemented manual forward and backward propagation, achieving 95% accuracy without external ML libraries.",
    "image": "assets/img/projects/NN.webp",
    "tags": ["Neural Network", "NumPy", "MNIST", "Backpropagation"],
    "category": "ai",
    "featured": true,
    "github": "https://github.com/ahmedehab411",
    "status": "github-soon",
    "priority": "high"
  },
  {
    "id": 6,
    "title": "image Classification with CNNs",
    "description": "Designed and trained CNN models using TensorFlow to classify images from MNIST, CIFAR-10, CIFAR-100, and Cats vs. Dogs datasets. Achieved 98.96% accuracy on MNIST and over 97% on other datasets using transfer learning and regularization techniques.",
    "image": "assets/img/projects/CNN.webp",
    "tags": ["CNN", "TensorFlow", "image Classification", "Transfer Learning"],
    "category": "ai",
    "featured": false,
    "github": "https://github.com/ahmedehab411",
    "status": "github-soon",
    "priority": "medium"
  },
  {
    "id": 7,
    "title": "ML Techniques from Scratch & Scikit-learn Comparison",
    "description": "Implemented linear and logistic regression models from scratch and validated performance on datasets including housing prices and MNIST. Compared custom models to Scikit-learn implementations to evaluate accuracy and convergence behavior.",
    "image": "assets/img/projects/ML.webp",
    "tags": ["Linear Regression", "Logistic Regression", "Scikit-learn"],
    "category": "ai",
    "featured": false,
    "github": "https://github.com/ahmedehab411",
    "status": "github-soon",
    "priority": "medium"
  },
  {
    "id": 8,
    "title": "Smart Home System",
    "description": "Designed a secure smart home architecture with 4 distributed ECUs and a central CPU for coordination and data exchange. Implemented communication protocols and system logic in C to manage sensor data and device control securely.",
    "image": "assets/img/projects/smartHome.webp",
    "tags": ["Smart Home", "ECUs", "Communication Protocols", "Embedded C"],
    "category": "embedded",
    "featured": true,
    "github": "https://github.com/ahmedehab411/Smart-Home",
    "status": "complete",
    "priority": "high"
  },
  {
    "id": 9,
    "title": "Scientific Calculator using ATMEGA32",
    "description": "Built a scientific calculator using ATMEGA32 with LCD output and keypad interface. Programmed real-time computation logic in C using interrupt-driven architecture for responsive operation.",
    "image": "assets/img/projects/AtmegaCalc.webp",
    "tags": ["ATMEGA32", "LCD", "Keypad", "Interrupt-Driven"],
    "category": "embedded",
    "featured": false,
    "github": "https://github.com/ahmedehab411/AVR-Calculator",
    "status": "complete",
    "priority": "medium"
  },
  {
    "id": 10,
    "title": "Ventilator Design",
    "description": "Contributed to a basic ventilator system with control logic for airflow, pressure, and breathing cycles. Handled real-time data from sensors and actuated motors using embedded C on a microcontroller platform.",
    "image": "assets/img/projects/Ventilator.webp",
    "tags": ["Ventilator", "Sensor Data", "Actuators", "Embedded C"],
    "category": "embedded",
    "featured": false,
    "github": "#",
    "status": "completed-unavailable",
    "priority": "medium"
  },
  {
    "id": 11,
    "title": "Clinic and Bank Terminal Systems",
    "description": "Developed standalone terminal-based systems in C for clinic and bank operations including user interaction, record handling, and flow control. Structured code using modular design to simulate multi-user environments with input validation and data processing.",
    "image": "assets/img/projects/bankSystem.webp",
    "tags": ["Terminal Systems", "C", "Modular Design", "Data Processing"],
    "category": "embedded",
    "featured": false,
    "github": "https://github.com/ahmedehab411",
    "status": "github-soon",
    "priority": "medium"
  },
  {
    "id": 12,
    "title": "Media Player",
    "description": "Developed a media player application using Qt C++ with support for audio and video playback. Integrated multimedia features using QMediaPlayer and implemented custom UI using Qt Widgets.",
    "image": "assets/img/projects/medialPlayer.webp",
    "tags": ["Qt C++", "Media Player", "QMediaPlayer", "UI Widgets"],
    "category": "software",
    "featured": false,
    "github": "https://github.com/ahmedehab411",
    "status": "github-soon",
    "priority": "medium"
  },
  {
    "id": 13,
    "title": "Windows Calculator Clone",
    "description": "Created a functional clone of the Windows calculator using Qt C++. Implemented button-grid interface, input parsing, and real-time expression evaluation.",
    "image": "assets/img/projects/calculator.webp",
    "tags": ["Qt C++", "Calculator", "Input Parsing"],
    "category": "software",
    "featured": false,
    "github": "https://github.com/ahmedehab411/QT-simple-calculator",
    "status": "complete",
    "priority": "medium"
  },
  {
    "id": 14,
    "title": "To-Do List Application",
    "description": "Built a task management app with add, delete, and complete functionalities using Qt Widgets and layouts. Used Qt's Model-View architecture to manage tasks efficiently and ensure UI responsiveness.",
    "image": "https://via.placeholder.com/400x300/302B63/FF6B6B?text=To-Do+App",
    "tags": ["Qt C++", "To-Do List", "Model-View", "Task Management"],
    "category": "software",
    "featured": false,
    "github": "https://github.com/ahmedehab411",
    "status": "github-soon",
    "priority": "medium"
  },
  {
    "id": 15,
    "title": "Data Entry Application",
    "description": "Developed a desktop data entry system using Qt C++ for structured input and record storage. Focused on modular design and UI validation for safe and consistent user data handling.",
    "image": "https://via.placeholder.com/400x300/302B63/4ECDC4?text=Data+Entry+App",
    "tags": ["Qt C++", "Data Entry", "UI Validation", "Modular Design"],
    "category": "software",
    "featured": false,
    "github": "https://github.com/ahmedehab411",
    "status": "completed-unavailable",
    "priority": "medium"
  }
]
